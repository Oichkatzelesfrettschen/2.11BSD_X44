#	$NetBSD: Makefile,v 1.13 1996/10/02 16:19:51 ws Exp $

.include <bsd.own.mk>

CPPFLAGS=	-I${SADIR} ${SACPPFLAGS} ${SAMISCCPPFLAGS} -DCOMPAT_UFS ${DEBUGCPPFLAGS}

.PATH.c: 	${SADIR} ${.PARSEDIR}/../../../lib/libc/string

# stand routines
SRCS+=	alloc.c bcopy.c bzero.c errno.c exit.c getfile.c \ 
		gets.c memcmp.c memcpy.c memmove.c memset.c panic.c \
		printf.c snprintf.c strdup.c strspn.c strtol.c twiddle.c \
		zalloc_malloc.c zalloc.c
		
#SRCS+= 	uuid_from_string.c uuid_to_string.c 

# io routines
SRCS+=	close.c closeall.c dev.c ls.c lseek.c open.c read.c stat.c \
		write.c

.if (${SA_USE_LOADFILE} == "yes")
SRCS+=	loadfile.c loadfile_ecoff.c loadfile_elf32.c loadfile_elf64.c lookup_elf32.c loadfile_xcoff32.c loadfile_xcoff64.c
.if (${MACHINE_CPU} != "mips")
SRCS+=	loadfile_aout.c
.endif
.endif

# boot filesystems
SRCS+=	lfs.c ufs.c

.if (${SA_INCLUDE_NET} == "yes")
# network routines
SRCS+=	net.c netif.c rpc.c

# network info services:
SRCS+=	bootp.c bootparam.c
.endif

.if (${SA_ENABLE_BIENDIAN} == "yes")
CPPFLAGS+=	-DLIBSA_BIENDIAN_SUPPORT
SRCS+=	byteorder.c
.endif

#.include <bsd.lib.mk>

lib${LIB}.o:: ${OBJS:O} __buildstdlib

CPPFLAGS+=	-Wno-pointer-sign

.if defined(HAVE_GCC) && ${MACHINE_ARCH} == "vax"
COPTS.bootp.c+=	-O0
.endif

# Files to clean up
CLEANFILES+= lib${LIB}.o lib${LIB}.po

# Remove from SRCS the .c files for any .S files added by the MD makefiles,
# also remove from SRCS the .c files for the .c files in NO_SRCS.
# (Unlike libc, we don't worry about lint)

.for check_file in ${SRCS:M*.S} ${NO_SRCS}
unwanted_file := ${SRCS:M${check_file:.S=.c}}
.if "${unwanted_file}" != ""
SRCS := ${SRCS:N${unwanted_file}}
.endif
.endfor