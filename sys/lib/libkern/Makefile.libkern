#	$NetBSD: Makefile.libkern,v 1.51 2021/05/17 08:50:36 mrg Exp $

#
# Variable definitions for libkern.
#
# Before including this, you _must_ set
#   KERNDIR: location of sys/lib/libkern
#
# You *may* set:
#   LIBKERN_ARCH: architecture subdir to be used
#   KERNCPPFLAGS: see Makefile.inc
#   KERNMISCCPPFLAGS: see Makefile.inc
#

.include <bsd.own.mk>

LIBKERN_ARCH= ${MACHINE_ARCH}
KERNMISCMAKEFLAGS="LIBKERN_ARCH=${LIBKERN_ARCH}"

.if defined(LIBKERN_ARCH) && !empty(LIBKERN_ARCH) && \
    exists(${KERNDIR}/arch/${LIBKERN_ARCH})
ARCHSUBDIR=     ${LIBKERN_ARCH}
.elif defined(MACHINE_ARCH) && !empty(MACHINE_ARCH) && \
    exists(${KERNDIR}/arch/${MACHINE_ARCH})
ARCHSUBDIR=     ${MACHINE_ARCH}
.elif defined(MACHINE_CPU) && !empty(MACHINE_CPU) && \
    exists(${KERNDIR}/arch/${MACHINE_CPU})
ARCHSUBDIR=     ${MACHINE_CPU}
.endif

M= ${KERNDIR}/arch/${ARCHSUBDIR}

CPPFLAGS+=	-I$M ${KERNCPPFLAGS} ${KERNMISCCPPFLAGS}

.include "${.PARSEDIR}/../../../lib/libc/Makefile.inc"

CPPFLAGS+= -I${KERNDIR}/../../../lib/libc/hash/

.PATH.c: ${KERNDIR}
.if exists ($M/Makefile.inc)
.PATH.c: $M
.PATH.S: $M
.include "$M/Makefile.inc"
.endif

.if (${MACHINE_ARCH} != "alpha")
# Quad support
SRCS+=	adddi3.c anddi3.c ashldi3.c ashrdi3.c cmpdi2.c divdi3.c iordi3.c 	\
		lshldi3.c lshrdi3.c moddi3.c muldi3.c negdi2.c notdi2.c qdivrem.c 	\
		subdi3.c  ucmpdi2.c udivdi3.c umoddi3.c xordi3.c
		
# 64-Bit division/modulo for 32-Bit Machines
SRCS+= udivmoddi4.c divmoddi4.c
.endif

# Other stuff
SRCS+=	__assert.c __main.c _que.c 
SRCS+=	inet_addr.c intoa.c
SRCS+=	murmur3_32.c prospectorhash.c arc4random.c crc32.c
SRCS+=	pmatch.c mcount.c bcd.c hexdump.c
SRCS+=	ffs.c ffsl.c ffsll.c
SRCS+= 	fls.c flsl.c flsll.c

SRCS+=	bcmp.c bcopy.c bzero.c
#SRCS+=	memmove.c memcmp.c
SRCS+=	memchr.c

SRCS+= 	max.c min.c locc.c
SRCS+=	imax.c imin.c lmax.c lmin.c ulmax.c ulmin.c

SRCS+=	random.c qsort.c

SRCS+=	scanc.c skpc.c
SRCS+=	strcat.c strchr.c strcmp.c strcpy.c strlen.c
SRCS+=	strrchr.c strncmp.c strncpy.c strsep.c
SRCS+=	strcasecmp.c strncasecmp.c

SRCS+=	strstr.c strlcpy.c strlcat.c
SRCS+=	strtoul.c

# if no machine specific memcpy(3), build one out of bcopy(3) based stub.
.if empty(SRCS:Mmemcpy.S)
SRCS+=	memcpy.c
.endif

# if no machine specific memmove(3), build one out of bcopy(3) based stub.
.if empty(SRCS:Mmemmove.S)
SRCS+=	memmove.c
.endif

# Files to clean up
CLEANFILES+= lib${LIB}.o lib${LIB}.po

# Remove from SRCS the .c files for any .S files added by the MD makefiles,
# also remove from SRCS the .c files for the .c files in NO_SRCS.
# (Unlike libc, we don't worry about lint)

.for check_file in ${SRCS:M*.S} ${NO_SRCS}
unwanted_file := ${SRCS:M${check_file:.S=.c}}
.if "${unwanted_file}" != ""
SRCS := ${SRCS:N${unwanted_file}}
.endif
.endfor
