#	@(#)devices	8.10 (Berkeley) 5/1/94
# 	machine-independent device definitions & attributes

#
# Device Classes
#
devclass 									disk
devclass 									tape
devclass 									ifnet
devclass 									tty

# Attributes which machine-independent bus support can be attached to.
# These should be defined here, because some of these busses can have
# devices which provide these attributes, and we'd like to avoid hairy
# ordering constraints on inclusion of the busses' "files" files.

define										isabus { }									# ISA attachment
define										eisabus { }									# EISA attachment
define										pcibus {[bus = -1]}							# PCI attachment
define										mcabus { }									# MCA attachment (MicroChannel)
define										usbus { }									# USB attachment
define										pcmciabus {[controller = -1],[socket = -1]}	# PCMCIA bus attachment
define										pcmciaslot {[slot = -1]}					# PCMCIA slot itself

#
# Generic Attributes
#
define	 									audiobus { }
define										midibus { }
define										midisyn
define										ata   {[channel = -1]}
define										ata_hl	{[drive = -1]}
define	 									atapi { }
define	                  						scsi_core
define	 									scsi {[channel = -1]}: scsi_core 
define 										pckbport {[slot = -1]}
define										pckbport_machdep_cnattach
define										videobus { }

#
# AUDIO Devices & Attributes
#
define										mulaw
define										auconv
define										aurateconv
define										audiobell

#
# DISK Devices & Attributes
#
define	wdc_base
define	ata_dma
device	wdc: ata, wdc_base

device	atabus: atapi,ata_hl
attach	atabus at ata
file	dev/core/ic/wdc.c					(ata_dma | atabus) & atabus & wdc_base 	needs-flag

#
# SERIAL Devices & Attributes
#

device	com { } : tty
file	dev/core/ic/com.c							com			needs-flag

#
# NETWORK Devices & Attributes 
# we have generic code for arc(net), ether(net), fddi, and atm.
#
define										arc
define										atm
define										ether
define										fddi
define										arp											# ARPing IPv4 pull this in:

#
# WSCONS Devices & Attributes
# device attributes: display, display with emulator, keyboard, and mouse
#
define	wsdisplaydev						{[kbdmux = 1]}
define	wsemuldisplaydev					{[console = -1], [kbdmux = 1]}
define	wsmousedev							{[mux = 0]}
define	wskbddev							{[console = -1], [mux = 1]}

#
# PCCONS Devices & Attributes
#
define	pcdisplayops
file	dev/misc/pccons/pcdisplay_subr.c	pcdisplayops
file	dev/misc/pccons/pcdisplay_chars.c	pcdisplayops

device	pckbc: pckbport
file	dev/misc/pccons/pckbc.c				pckbc			needs-flag

#
# VGA Devices & Attributes
#
device	vga: wsemuldisplaydev, pcdisplayops
file	dev/video/vga/vga.c					vga & !vga_rasterconsole		needs-flag
file	dev/video/vga/vga_raster.c				vga_rasterconsole			needs-flag
file	dev/video/vga/vga_subr.c				vga | vga_rasterconsole
file	dev/video/vga/vga_common.c				vga | vga_rasterconsole

#
# USB Devices & Attributes
#

#defparam USB_MEM_RESERVE

# UHCI USB controller
#device	uhci: usbus
#file	dev/usb/uhci.c						uhci			needs-flag

# OHCI USB controller
#device	ohci: usbus
#file	dev/usb/ohci.c						ohci			needs-flag

# EHCI USB controller
#device	ehci: usbus
#file	dev/usb/ehci.c						ehci			needs-flag

#
# PSEUDO-DEVICES legitimate
#
defpseudo 	  	ksyms
defpseudo     	sequencer

defpseudo  		vnd:						disk
defpseudo 	 	ccd:						disk

defpseudo 		pty: 						tty
defpseudo 		tb: 						tty

defpseudo 		imp: 						ifnet
defpseudo 		loop: 						ifnet
defpseudo 		sl: 						ifnet
defpseudo 		ppp: 						ifnet
defpseudo 		tun: 						ifnet
defpseudo 		bpfilter:					ifnet
defpseudo 		strip: 						ifnet
defpseudo 		ipfilter: 					ifnet
