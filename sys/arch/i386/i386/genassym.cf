 #
 #  Copyright (c) 1982, 1990, 1993
 #	The Regents of the University of California.  All rights reserved.
 #
 # This code is derived from software contributed to Berkeley by
 # William Jolitz.
 #
 # Redistribution and use in source and binary forms, with or without
 # modification, are permitted provided that the following conditions
 # are met:
 # 1. Redistributions of source code must retain the above copyright
 #    notice, this list of conditions and the following disclaimer.
 # 2. Redistributions in binary form must reproduce the above copyright
 #    notice, this list of conditions and the following disclaimer in the
 #    documentation and/or other materials provided with the distribution.
 # 3. All advertising materials mentioning features or use of this software
 #    must display the following acknowledgement:
 #		This product includes software developed by the University of
 #		California, Berkeley and its contributors.
 # 4. Neither the name of the University nor the names of its contributors
 #    may be used to endorse or promote products derived from this software
 #    without specific prior written permission.
 #
 # THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 # ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 # IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 # ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 # FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 # DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 # OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 # HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 # LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 # OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 # SUCH DAMAGE.
 #
 #	@(#)genassym.c	8.2 (Berkeley) 9/23/93
 #

#include <sys/cdefs.h>
include <sys/param.h>
#include <sys/buf.h>
#include <sys/map.h>
include <sys/proc.h>
#include <sys/resourcevar.h>
#include <sys/device.h>
#include <sys/user.h>
#include <sys/mbuf.h>
#include <sys/msgbuf.h>
#include <sys/syscall.h>
#include <sys/stddef.h>
#include <sys/vmmeter.h>

#include <vm/include/vm.h>

include <machine/bootinfo.h>
#include <machine/cpu.h>
#include <machine/cpufunc.h>
include <machine/frame.h>
include <machine/pcb.h>
include <machine/pic.h>
#include <machine/psl.h>
#include <machine/reg.h>
#include <machine/tss.h>
#include <machine/signal.h>
include <machine/trap.h>
#include <machine/pmap.h>
include <machine/intr.h>
#include <machine/types.h>

#include <machine/vmparam.h>

#if defined(_KERNEL)
#include "isa.h"
#include "ioapic.h"
#endif

if NISA > 0
include <machine/isa/isa_machdep.h>
endif

if NIOAPIC > 0
include <machine/apic/ioapicreg.h>
include <machine/apic/ioapicvar.h>
endif

define	COHERENCY_UNIT		COHERENCY_UNIT

define P_FORW 				offsetof(struct proc, p_forw)
define P_BACK 				offsetof(struct proc, p_back)
define P_ADDR 				offsetof(struct proc, p_addr)
define P_STAT 				offsetof(struct proc, p_stat)
define P_WCHAN 				offsetof(struct proc, p_wchan)

define V_SWTCH 				offsetof(struct vmrate, v_swtch)
define V_TRAP 				offsetof(struct vmrate, v_trap)
define V_INTR 				offsetof(struct vmrate, v_intr)

define PCB_CR3 				offsetof(struct pcb, pcb_cr3)
define PCB_EIP 				offsetof(struct pcb, pcb_tss.tss_eip)
define PCB_EBX 				offsetof(struct pcb, pcb_ebx)
define PCB_ESP 				offsetof(struct pcb, pcb_esp)
define PCB_EBP 				offsetof(struct pcb, pcb_ebp)
define PCB_ESI 				offsetof(struct pcb, pcb_esi)
define PCB_EDI 				offsetof(struct pcb, pcb_edi)
define PCB_SAVEFPU 			offsetof(struct pcb, pcb_savefpu)
define PCB_CMAP2 			offsetof(struct pcb, pcb_cmap2)
define PCB_ONFAULT 			offsetof(struct pcb, pcb_onfault)
define PCB_VM86				offsetof(struct pcb, pcb_vm86)
define PCB_SIZE				sizeof(struct pcb)

define TF_CS				offsetof(struct trapframe, tf_cs)
define TF_EFLAGS			offsetof(struct trapframe, tf_eflags)

define ENOENT  				ENOENT
define EFAULT  				EFAULT

define IH_FUN				offsetof(struct intrhand, ih_fun)
define IH_ARG				offsetof(struct intrhand, ih_arg)
define IH_COUNT				offsetof(struct intrhand, ih_count)
define IH_NEXT				offsetof(struct intrhand, ih_next)

define IS_HANDLERS			offsetof(struct intrsource, is_handlers)
define IS_PIC				offsetof(struct intrsource, is_pic)
define IS_PIN				offsetof(struct intrsource, is_pin)
define IS_TYPE				offsetof(struct intrsource, is_type)
define IS_MAXLEVEL			offsetof(struct intrsource, is_maxlevel)

if NIOAPIC > 0
define SPIC_IOAPIC			offsetof(struct softpic, sp_ioapic)
define IOAPIC_SC_REG		offsetof(struct ioapic_softc, sc_reg)
define IOAPIC_SC_DATA		offsetof(struct ioapic_softc, sc_data)
endif

define IPL_NONE			IPL_NONE
define IPL_SOFTCLOCK		IPL_SOFTCLOCK
define IPL_SOFTNET		IPL_SOFTNET
define IPL_SOFTSERIAL		IPL_SOFTSERIAL
define IPL_CLOCK		IPL_CLOCK
define IPL_HIGH			IPL_HIGH
define IPL_IPI			IPL_IPI

define LIR_IPI			LIR_IPI
define LIR_TIMER		LIR_TIMER

define BOOTINFO_SIZE		sizeof(struct bootinfo)
define BI_VERSION		offsetof(struct bootinfo, bi_version)
define BI_KERNELNAME		offsetof(struct bootinfo, bi_kernelname)
define BI_ENDCOMMON		offsetof(struct bootinfo, bi_endcommon)
define BI_SIZE			offsetof(struct bootinfo, bi_size)

define VM86_FRAMESIZE		sizeof(struct vm86frame)
